import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score, classification_report

# Load the dataset
file_path = '/mnt/data/fetal_health.csv'
data = pd.read_csv(file_path)

# Separate features and target
X = data.drop('fetal_health', axis=1)
y = data['fetal_health']

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Standardize the features
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Apply PCA (keeping only 2 principal components for simplicity)
pca = PCA(n_components=2)
X_train_pca = pca.fit_transform(X_train_scaled)
X_test_pca = pca.transform(X_test_scaled)

# Train an SVM model on the reduced data
svm = SVC(kernel='rbf', random_state=42)
svm.fit(X_train_pca, y_train)

# Make predictions and evaluate the model
y_pred = svm.predict(X_test_pca)
print(f'Accuracy: {accuracy_score(y_test, y_pred)}')
print(classification_report(y_test, y_pred))
